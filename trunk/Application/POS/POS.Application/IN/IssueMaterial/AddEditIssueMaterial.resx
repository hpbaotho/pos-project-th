<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxMaterial.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBoxMaterial.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>